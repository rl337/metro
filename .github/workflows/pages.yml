name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,test]"
          
      - name: Run validation
        run: ./run_checks.sh
        
      - name: Generate city data
        run: |
          python -c "
          import json
          from metro.population import PopulationModel
          import random
          
          # Load the base city configuration
          with open('city.json', 'r') as f:
              city_config = json.load(f)
          
          # Generate additional city variations for the webapp
          cities = {}
          
          # Base city
          cities['base'] = city_config
          
          # Generate cities with different populations
          for pop in [50000, 250000, 500000, 1000000]:
              rng = random.Random(city_config['seed'])
              pop_model = PopulationModel(rng, pop)
              
              city_data = {
                  'population': pop,
                  'seed': city_config['seed'],
                  'workforce': pop_model.workforce(),
                  'zones': pop_model.zones,
                  'occupations': pop_model.occupations,
                  'histogram': pop_model.histogram
              }
              cities[f'pop_{pop}'] = city_data
          
          # Save all city variations
          with open('docs/cities.json', 'w') as f:
              json.dump(cities, f, indent=2)
          "
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
